{"ast":null,"code":"import _asyncToGenerator from \"/Users/FionnKuo/Documents/Developer/git/github/main_vutify-tender/vuetify-tender/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  data: function data() {\n    return {\n      certificates: this.$store.state.certificates\n    };\n  },\n  methods: {\n    insertCertificate: function insertCertificate() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Object.keys(_this.certificates).filter(function (k, i) {\n                  return i >= 100 && i < 300;\n                }).forEach(function (k) {\n                  return console.log(_this.certificates[k]);\n                });\n                console.log(\"addCertificate\");\n                console.log(\"certificates: \" + _this.certificates);\n                console.log(_this.certificates); // console.log(\"store: \"+this.$store.state.certificates);\n                // console.log(this.$store.state.certificates);\n\n                axios.post(\"http://127.0.0.1:3000/createCertificateMuti\", {\n                  tenderid: element.tendersID,\n                  accountCode: element.code,\n                  account: element.account,\n                  name: element.name,\n                  currency: element.accountCurrecy,\n                  branch: element.branchName,\n                  amount: element.amount\n                }).then(function (response) {\n                  console.log(\"resp: \" + response);\n                  console.log(response);\n                })[\"catch\"](function (err) {\n                  console.log(\"err\");\n                  console.log(err);\n                }); // for (\n                //   let index = 0;\n                //   index < Object.keys(this.certificates).length ;\n                //   ++index\n                // ) {\n                //   const element = this.certificates[index];\n                //   console.log(\"element: \"+element);\n                //   console.log(element);\n                //   const unwrapped = JSON.parse(JSON.stringify(element));\n                //   console.log(\"unwrapped: \"+unwrapped)\n                //   console.log(unwrapped);\n                //   console.log(element);\n                // console.log(element.tendersID)\n                //   axios.post(\"http://127.0.0.1:3000/createCertificateMuti\", {\n                // tenderid: element.tendersID,\n                // accountCode: element.code,\n                // account: element.account,     \n                // name: element.name,\n                // currency: element.accountCurrecy,\n                // branch: element.branchName,\n                // amount: element.amount,\n                //   })\n                //   .then(function (response) {\n                //     console.log(\"resp: \"+response)\n                //     console.log(response)\n                //   }).catch(err => {\n                //     console.log(\"err\")\n                //     console.log(err);\n                //   })\n                // }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACAA,MADA,kBACA;AACA;AACAC;AADA;AAGA,GALA;AAMAC;AACAC,qBADA,+BACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,gDACAC,MADA,CACA;AAAA;AAAA,iBADA,EAEAC,OAFA,CAEA;AAAA;AAAA,iBAFA;AAIAC;AACAA;AACAA,gDAPA,CAQA;AACA;;AAEAC;AACAC,6CADA;AAEAC,2CAFA;AAGAC,0CAHA;AAIAC,oCAJA;AAKAC,kDALA;AAMAC,4CANA;AAOAC;AAPA,mBAUAC,IAVA,CAUA;AACAT;AACAA;AACA,iBAbA,WAaA;AACAA;AACAA;AACA,iBAhBA,EAXA,CA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6DA;AA9DA;AANA","names":["data","certificates","methods","insertCertificate","Object","filter","forEach","console","axios","tenderid","accountCode","account","name","currency","branch","amount","then"],"sourceRoot":"src/components/TenderDetail/Dialog","sources":["DialogSureApply.vue"],"sourcesContent":["<template>\n  <v-dialog :value=\"true\" persistent max-width=\"290\">\n    <v-card>\n      <v-card-title class=\"text-h5\"> 確定 </v-card-title>\n      <v-card-text\n        >確定繳交押標金 {{ this.$route.query.amount }} 元嗎？\n        {{ this.$route.query.amount }} 將會在您的帳戶凍結</v-card-text\n      >\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"green darken-1\" text @click=\"$emit('close')\"> No </v-btn>\n\n        <!-- ------------------------------------------------------------- -->\n        <!-- call API To Bank -->\n        <v-btn color=\"green darken-1\" text @click=\"insertCertificate\"> Yes </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      certificates: this.$store.state.certificates\n    };\n  },\n  methods: {\n    async insertCertificate() {\n      Object.keys(this.certificates)\n        .filter((k, i) => i >= 100 && i < 300)\n        .forEach((k) => console.log(this.certificates[k]));\n\n      console.log(\"addCertificate\");\n      console.log(\"certificates: \"+this.certificates);\n      console.log(this.certificates);\n      // console.log(\"store: \"+this.$store.state.certificates);\n      // console.log(this.$store.state.certificates);\n\n      axios.post(\"http://127.0.0.1:3000/createCertificateMuti\", {\n          tenderid: element.tendersID,\n          accountCode: element.code,\n          account: element.account,     \n          name: element.name,\n          currency: element.accountCurrecy,\n          branch: element.branchName,\n          amount: element.amount,\n\n        })\n        .then(function (response) {\n          console.log(\"resp: \"+response)\n          console.log(response)\n        }).catch(err => {\n          console.log(\"err\")\n          console.log(err);\n        })\n\n      // for (\n      //   let index = 0;\n      //   index < Object.keys(this.certificates).length ;\n      //   ++index\n      // ) {\n      //   const element = this.certificates[index];\n      //   console.log(\"element: \"+element);\n      //   console.log(element);\n      //   const unwrapped = JSON.parse(JSON.stringify(element));\n      //   console.log(\"unwrapped: \"+unwrapped)\n      //   console.log(unwrapped);\n      //   console.log(element);\n        // console.log(element.tendersID)\n      //   axios.post(\"http://127.0.0.1:3000/createCertificateMuti\", {\n          // tenderid: element.tendersID,\n          // accountCode: element.code,\n          // account: element.account,     \n          // name: element.name,\n          // currency: element.accountCurrecy,\n          // branch: element.branchName,\n          // amount: element.amount,\n\n      //   })\n      //   .then(function (response) {\n      //     console.log(\"resp: \"+response)\n      //     console.log(response)\n      //   }).catch(err => {\n      //     console.log(\"err\")\n      //     console.log(err);\n      //   })\n      // }\n\n    }\n  },\n};\n</script>\n\n<style>\n</style>"]},"metadata":{},"sourceType":"module"}