{"ast":null,"code":"import _objectSpread from \"/Users/FionnKuo/Documents/Developer/git/github/vuetify-tender/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/Users/FionnKuo/Documents/Developer/git/github/vuetify-tender/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/Users/FionnKuo/Documents/Developer/git/github/vuetify-tender/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.find.js\";\n// Styles\nimport \"../../../src/components/VDialog/VDialog.sass\"; // Components\n\nimport { VThemeProvider } from '../VThemeProvider'; // Mixins\n\nimport Activatable from '../../mixins/activatable';\nimport Dependent from '../../mixins/dependent';\nimport Detachable from '../../mixins/detachable';\nimport Overlayable from '../../mixins/overlayable';\nimport Returnable from '../../mixins/returnable';\nimport Stackable from '../../mixins/stackable'; // Directives\n\nimport ClickOutside from '../../directives/click-outside'; // Helpers\n\nimport mixins from '../../util/mixins';\nimport { removed } from '../../util/console';\nimport { convertToUnit, keyCodes } from '../../util/helpers';\nvar baseMixins = mixins(Dependent, Detachable, Overlayable, Returnable, Stackable, Activatable);\n/* @vue/component */\n\nexport default baseMixins.extend({\n  name: 'v-dialog',\n  directives: {\n    ClickOutside: ClickOutside\n  },\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    fullscreen: Boolean,\n    light: Boolean,\n    maxWidth: [String, Number],\n    noClickAnimation: Boolean,\n    origin: {\n      type: String,\n      \"default\": 'center center'\n    },\n    persistent: Boolean,\n    retainFocus: {\n      type: Boolean,\n      \"default\": true\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      \"default\": 'dialog-transition'\n    },\n    width: [String, Number]\n  },\n  data: function data() {\n    return {\n      activatedBy: null,\n      animate: false,\n      animateTimeout: -1,\n      stackMinZIndex: 200,\n      previousActiveElement: null\n    };\n  },\n  computed: {\n    classes: function classes() {\n      var _ref;\n\n      return _ref = {}, _defineProperty(_ref, \"v-dialog \".concat(this.contentClass).trim(), true), _defineProperty(_ref, 'v-dialog--active', this.isActive), _defineProperty(_ref, 'v-dialog--persistent', this.persistent), _defineProperty(_ref, 'v-dialog--fullscreen', this.fullscreen), _defineProperty(_ref, 'v-dialog--scrollable', this.scrollable), _defineProperty(_ref, 'v-dialog--animated', this.animate), _ref;\n    },\n    contentClasses: function contentClasses() {\n      return {\n        'v-dialog__content': true,\n        'v-dialog__content--active': this.isActive\n      };\n    },\n    hasActivator: function hasActivator() {\n      return Boolean(!!this.$slots.activator || !!this.$scopedSlots.activator);\n    }\n  },\n  watch: {\n    isActive: function isActive(val) {\n      if (val) {\n        this.show();\n        this.hideScroll();\n      } else {\n        var _this$previousActiveE;\n\n        this.removeOverlay();\n        this.unbind();\n        (_this$previousActiveE = this.previousActiveElement) == null ? void 0 : _this$previousActiveE.focus();\n      }\n    },\n    fullscreen: function fullscreen(val) {\n      if (!this.isActive) return;\n\n      if (val) {\n        this.hideScroll();\n        this.removeOverlay(false);\n      } else {\n        this.showScroll();\n        this.genOverlay();\n      }\n    }\n  },\n  created: function created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this);\n    }\n  },\n  beforeMount: function beforeMount() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.isBooted = _this.isActive;\n      _this.isActive && _this.show();\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (typeof window !== 'undefined') this.unbind();\n  },\n  methods: {\n    animateClick: function animateClick() {\n      var _this2 = this;\n\n      this.animate = false; // Needed for when clicking very fast\n      // outside of the dialog\n\n      this.$nextTick(function () {\n        _this2.animate = true;\n        window.clearTimeout(_this2.animateTimeout);\n        _this2.animateTimeout = window.setTimeout(function () {\n          return _this2.animate = false;\n        }, 150);\n      });\n    },\n    closeConditional: function closeConditional(e) {\n      var target = e.target; // Ignore the click if the dialog is closed or destroyed,\n      // if it was on an element inside the content,\n      // if it was dragged onto the overlay (#6969),\n      // or if this isn't the topmost dialog (#9907)\n\n      return !(this._isDestroyed || !this.isActive || this.$refs.content.contains(target) || this.overlay && target && !this.overlay.$el.contains(target)) && this.activeZIndex >= this.getMaxZIndex();\n    },\n    hideScroll: function hideScroll() {\n      if (this.fullscreen) {\n        document.documentElement.classList.add('overflow-y-hidden');\n      } else {\n        Overlayable.options.methods.hideScroll.call(this);\n      }\n    },\n    show: function show() {\n      var _this3 = this;\n\n      !this.fullscreen && !this.hideOverlay && this.genOverlay(); // Double nextTick to wait for lazy content to be generated\n\n      this.$nextTick(function () {\n        _this3.$nextTick(function () {\n          if (!_this3.$refs.content.contains(document.activeElement)) {\n            _this3.previousActiveElement = document.activeElement;\n\n            _this3.$refs.content.focus();\n          }\n\n          _this3.bind();\n        });\n      });\n    },\n    bind: function bind() {\n      window.addEventListener('focusin', this.onFocusin);\n    },\n    unbind: function unbind() {\n      window.removeEventListener('focusin', this.onFocusin);\n    },\n    onClickOutside: function onClickOutside(e) {\n      this.$emit('click:outside', e);\n\n      if (this.persistent) {\n        this.noClickAnimation || this.animateClick();\n      } else {\n        this.isActive = false;\n      }\n    },\n    onKeydown: function onKeydown(e) {\n      if (e.keyCode === keyCodes.esc && !this.getOpenDependents().length) {\n        if (!this.persistent) {\n          this.isActive = false;\n          var activator = this.getActivator();\n          this.$nextTick(function () {\n            return activator && activator.focus();\n          });\n        } else if (!this.noClickAnimation) {\n          this.animateClick();\n        }\n      }\n\n      this.$emit('keydown', e);\n    },\n    // On focus change, wrap focus to stay inside the dialog\n    // https://github.com/vuetifyjs/vuetify/issues/6892\n    onFocusin: function onFocusin(e) {\n      if (!e || !this.retainFocus) return;\n      var target = e.target;\n\n      if (!!target && // It isn't the document or the dialog body\n      ![document, this.$refs.content].includes(target) && // It isn't inside the dialog body\n      !this.$refs.content.contains(target) && // We're the topmost dialog\n      this.activeZIndex >= this.getMaxZIndex() && // It isn't inside a dependent element (like a menu)\n      !this.getOpenDependentElements().some(function (el) {\n        return el.contains(target);\n      }) // So we must have focused something outside the dialog and its children\n      ) {\n        // Find and focus the first available element inside the dialog\n        var focusable = this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n\n        var el = _toConsumableArray(focusable).find(function (el) {\n          return !el.hasAttribute('disabled');\n        });\n\n        el && el.focus();\n      }\n    },\n    genContent: function genContent() {\n      var _this4 = this;\n\n      return this.showLazyContent(function () {\n        return [_this4.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: _this4.light,\n            dark: _this4.dark\n          }\n        }, [_this4.$createElement('div', {\n          \"class\": _this4.contentClasses,\n          attrs: _objectSpread({\n            role: 'dialog',\n            tabindex: _this4.isActive ? 0 : undefined,\n            'aria-modal': _this4.hideOverlay ? undefined : 'true'\n          }, _this4.getScopeIdAttrs()),\n          on: {\n            keydown: _this4.onKeydown\n          },\n          style: {\n            zIndex: _this4.activeZIndex\n          },\n          ref: 'content'\n        }, [_this4.genTransition()])])];\n      });\n    },\n    genTransition: function genTransition() {\n      var content = this.genInnerContent();\n      if (!this.transition) return content;\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          appear: true\n        }\n      }, [content]);\n    },\n    genInnerContent: function genInnerContent() {\n      var data = {\n        \"class\": this.classes,\n        ref: 'dialog',\n        directives: [{\n          name: 'click-outside',\n          value: {\n            handler: this.onClickOutside,\n            closeConditional: this.closeConditional,\n            include: this.getOpenDependentElements\n          }\n        }, {\n          name: 'show',\n          value: this.isActive\n        }],\n        style: {\n          transformOrigin: this.origin\n        }\n      };\n\n      if (!this.fullscreen) {\n        data.style = _objectSpread(_objectSpread({}, data.style), {}, {\n          maxWidth: convertToUnit(this.maxWidth),\n          width: convertToUnit(this.width)\n        });\n      }\n\n      return this.$createElement('div', data, this.getContentSlot());\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      staticClass: 'v-dialog__container',\n      \"class\": {\n        'v-dialog__container--attached': this.attach === '' || this.attach === true || this.attach === 'attach'\n      }\n    }, [this.genActivator(), this.genContent()]);\n  }\n});","map":{"version":3,"mappings":"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","names":["VThemeProvider","Activatable","Dependent","Detachable","Overlayable","Returnable","Stackable","ClickOutside","mixins","removed","convertToUnit","keyCodes","baseMixins","extend","name","directives","props","dark","Boolean","disabled","fullscreen","light","maxWidth","String","Number","noClickAnimation","origin","type","persistent","retainFocus","scrollable","transition","width","data","activatedBy","animate","animateTimeout","stackMinZIndex","previousActiveElement","computed","classes","contentClass","trim","isActive","contentClasses","hasActivator","$slots","activator","$scopedSlots","watch","val","show","hideScroll","removeOverlay","unbind","focus","showScroll","genOverlay","created","$attrs","hasOwnProperty","beforeMount","$nextTick","isBooted","beforeDestroy","window","methods","animateClick","clearTimeout","setTimeout","closeConditional","e","target","_isDestroyed","$refs","content","contains","overlay","$el","activeZIndex","getMaxZIndex","document","documentElement","classList","add","options","call","hideOverlay","activeElement","bind","addEventListener","onFocusin","removeEventListener","onClickOutside","$emit","onKeydown","keyCode","esc","getOpenDependents","length","getActivator","includes","getOpenDependentElements","some","el","focusable","querySelectorAll","find","hasAttribute","genContent","showLazyContent","$createElement","root","attrs","role","tabindex","undefined","getScopeIdAttrs","on","keydown","style","zIndex","ref","genTransition","genInnerContent","appear","value","handler","include","transformOrigin","getContentSlot","render","h","staticClass","attach","genActivator"],"sourceRoot":"","sources":["../../../src/components/VDialog/VDialog.ts"],"sourcesContent":["// Styles\nimport './VDialog.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Overlayable from '../../mixins/overlayable'\nimport Returnable from '../../mixins/returnable'\nimport Stackable from '../../mixins/stackable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Helpers\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Detachable,\n  Overlayable,\n  Returnable,\n  Stackable,\n  Activatable,\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-dialog',\n\n  directives: { ClickOutside },\n\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    fullscreen: Boolean,\n    light: Boolean,\n    maxWidth: [String, Number],\n    noClickAnimation: Boolean,\n    origin: {\n      type: String,\n      default: 'center center',\n    },\n    persistent: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      default: 'dialog-transition',\n    },\n    width: [String, Number],\n  },\n\n  data () {\n    return {\n      activatedBy: null as EventTarget | null,\n      animate: false,\n      animateTimeout: -1,\n      stackMinZIndex: 200,\n      previousActiveElement: null as HTMLElement | null,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        [(`v-dialog ${this.contentClass}`).trim()]: true,\n        'v-dialog--active': this.isActive,\n        'v-dialog--persistent': this.persistent,\n        'v-dialog--fullscreen': this.fullscreen,\n        'v-dialog--scrollable': this.scrollable,\n        'v-dialog--animated': this.animate,\n      }\n    },\n    contentClasses (): object {\n      return {\n        'v-dialog__content': true,\n        'v-dialog__content--active': this.isActive,\n      }\n    },\n    hasActivator (): boolean {\n      return Boolean(\n        !!this.$slots.activator ||\n        !!this.$scopedSlots.activator\n      )\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.show()\n        this.hideScroll()\n      } else {\n        this.removeOverlay()\n        this.unbind()\n        this.previousActiveElement?.focus()\n      }\n    },\n    fullscreen (val) {\n      if (!this.isActive) return\n\n      if (val) {\n        this.hideScroll()\n        this.removeOverlay(false)\n      } else {\n        this.showScroll()\n        this.genOverlay()\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.isBooted = this.isActive\n      this.isActive && this.show()\n    })\n  },\n\n  beforeDestroy () {\n    if (typeof window !== 'undefined') this.unbind()\n  },\n\n  methods: {\n    animateClick () {\n      this.animate = false\n      // Needed for when clicking very fast\n      // outside of the dialog\n      this.$nextTick(() => {\n        this.animate = true\n        window.clearTimeout(this.animateTimeout)\n        this.animateTimeout = window.setTimeout(() => (this.animate = false), 150)\n      })\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n      // Ignore the click if the dialog is closed or destroyed,\n      // if it was on an element inside the content,\n      // if it was dragged onto the overlay (#6969),\n      // or if this isn't the topmost dialog (#9907)\n      return !(\n        this._isDestroyed ||\n        !this.isActive ||\n        this.$refs.content.contains(target) ||\n        (this.overlay && target && !this.overlay.$el.contains(target))\n      ) && this.activeZIndex >= this.getMaxZIndex()\n    },\n    hideScroll () {\n      if (this.fullscreen) {\n        document.documentElement.classList.add('overflow-y-hidden')\n      } else {\n        Overlayable.options.methods.hideScroll.call(this)\n      }\n    },\n    show () {\n      !this.fullscreen && !this.hideOverlay && this.genOverlay()\n      // Double nextTick to wait for lazy content to be generated\n      this.$nextTick(() => {\n        this.$nextTick(() => {\n          if (!this.$refs.content.contains(document.activeElement)) {\n            this.previousActiveElement = document.activeElement as HTMLElement\n            this.$refs.content.focus()\n          }\n          this.bind()\n        })\n      })\n    },\n    bind () {\n      window.addEventListener('focusin', this.onFocusin)\n    },\n    unbind () {\n      window.removeEventListener('focusin', this.onFocusin)\n    },\n    onClickOutside (e: Event) {\n      this.$emit('click:outside', e)\n\n      if (this.persistent) {\n        this.noClickAnimation || this.animateClick()\n      } else {\n        this.isActive = false\n      }\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc && !this.getOpenDependents().length) {\n        if (!this.persistent) {\n          this.isActive = false\n          const activator = this.getActivator()\n          this.$nextTick(() => activator && (activator as HTMLElement).focus())\n        } else if (!this.noClickAnimation) {\n          this.animateClick()\n        }\n      }\n      this.$emit('keydown', e)\n    },\n    // On focus change, wrap focus to stay inside the dialog\n    // https://github.com/vuetifyjs/vuetify/issues/6892\n    onFocusin (e: Event) {\n      if (!e || !this.retainFocus) return\n\n      const target = e.target as HTMLElement\n\n      if (\n        !!target &&\n        // It isn't the document or the dialog body\n        ![document, this.$refs.content].includes(target) &&\n        // It isn't inside the dialog body\n        !this.$refs.content.contains(target) &&\n        // We're the topmost dialog\n        this.activeZIndex >= this.getMaxZIndex() &&\n        // It isn't inside a dependent element (like a menu)\n        !this.getOpenDependentElements().some(el => el.contains(target))\n        // So we must have focused something outside the dialog and its children\n      ) {\n        // Find and focus the first available element inside the dialog\n        const focusable = this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\n        const el = [...focusable].find(el => !el.hasAttribute('disabled')) as HTMLElement | undefined\n        el && el.focus()\n      }\n    },\n    genContent () {\n      return this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [\n          this.$createElement('div', {\n            class: this.contentClasses,\n            attrs: {\n              role: 'dialog',\n              tabindex: this.isActive ? 0 : undefined,\n              'aria-modal': this.hideOverlay ? undefined : 'true',\n              ...this.getScopeIdAttrs(),\n            },\n            on: { keydown: this.onKeydown },\n            style: { zIndex: this.activeZIndex },\n            ref: 'content',\n          }, [this.genTransition()]),\n        ]),\n      ])\n    },\n    genTransition () {\n      const content = this.genInnerContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          appear: true,\n        },\n      }, [content])\n    },\n    genInnerContent () {\n      const data: VNodeData = {\n        class: this.classes,\n        ref: 'dialog',\n        directives: [\n          {\n            name: 'click-outside',\n            value: {\n              handler: this.onClickOutside,\n              closeConditional: this.closeConditional,\n              include: this.getOpenDependentElements,\n            },\n          },\n          { name: 'show', value: this.isActive },\n        ],\n        style: {\n          transformOrigin: this.origin,\n        },\n      }\n\n      if (!this.fullscreen) {\n        data.style = {\n          ...data.style as object,\n          maxWidth: convertToUnit(this.maxWidth),\n          width: convertToUnit(this.width),\n        }\n      }\n\n      return this.$createElement('div', data, this.getContentSlot())\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-dialog__container',\n      class: {\n        'v-dialog__container--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n    }, [\n      this.genActivator(),\n      this.genContent(),\n    ])\n  },\n})\n"]},"metadata":{},"sourceType":"module"}