{"ast":null,"code":"import _defineProperty from \"/Users/FionnKuo/Documents/Developer/git/github/main_vutify-tender/vuetify-tender/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _name$inject$methods$;\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.string.substr.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default (_name$inject$methods$ = {\n  name: 'refresh',\n  inject: ['reload'],\n  methods: {\n    refresh: function refresh() {\n      this.reload();\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      bankCode: \"\",\n      bankAccount: \"\",\n      bankName: \"\",\n      bankCurrecy: \"\",\n      branchName: \"\",\n      bankAmount: \"\",\n      tenderAmount: \"\",\n      certificateAmont: \"\",\n      notifyNumber: \"\",\n      rules: [function (value) {\n        return !!value || \"Required.\";\n      }],\n      amountRules: [function (value) {\n        return !!value || \"Required.\";\n      }, function (value) {\n        return value <= Number(_this.tenderAmount) - Number(_this.certificateAmont) || \"不能高於\" + _this.notifyNumber;\n      }],\n      accountRules: [function (value) {\n        return !!value || \"Required.\";\n      }, function (value) {\n        return (value || \"\").length <= 14 || \"Max 14 characters\";\n      }],\n      branchRules: [function (value) {\n        return !!value || \"Required.\";\n      }, function (value) {\n        return (value || \"\").length == 4 || \"Must 4 characters\";\n      }, function (value) {\n        return value < 1 || \"沒有此分行號\";\n      }]\n    };\n  }\n}, _defineProperty(_name$inject$methods$, \"methods\", {\n  addCertificate: function addCertificate() {\n    var newCertificate = {\n      id: Date.now() + this.$route.query.id + this.bankCode.substr(0, 3) + this.bankAccount,\n      code: this.bankCode.substr(0, 3),\n      account: this.bankAccount.replace(/ /g, '').padStart(14, '0'),\n      name: this.bankName.replace(/ /g, ''),\n      accountCurrecy: this.bankCurrecy.replace(/ /g, ''),\n      branchName: this.branchName.replace(/ /g, ''),\n      amount: this.bankAmount.replace(/ /g, ''),\n      tendersID: this.$route.query.id\n    };\n    this.$store.commit(\"addCertificate\", newCertificate);\n    this.$emit(\"close\");\n    this.reload();\n  }\n}), _defineProperty(_name$inject$methods$, \"computed\", {\n  inputInvaild: function inputInvaild() {\n    this.tenderAmount = this.$route.query.amount;\n    this.certificateAmont = this.$store.state.currentCertificateAmount;\n    return this.bankCode.trim() === \"\" || this.bankAccount.trim() === \"\" || this.bankName.trim() === \"\" || this.bankCurrecy.trim() === \"\" || this.branchName.trim() === \"\" || this.bankAmount.trim() === \"\" || Number(this.bankAmount) > Number(this.tenderAmount) - Number(this.certificateAmont) || Number(this.bankAmount) < 1 || Number(this.branchName) < 1;\n  }\n}), _defineProperty(_name$inject$methods$, \"mounted\", function mounted() {\n  this.notifyNumber = Number(this.tenderAmount) - Number(this.certificateAmont).toString();\n}), _name$inject$methods$);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACAA,iBADA;AAEAC,oBAFA;AAGAC;AACAC,WADA,qBACA;AACA;AACA;AAHA,GAHA;AAQAC,MARA,kBAQA;AAAA;;AACA;AACAC,kBADA;AAEAC,qBAFA;AAGAC,kBAHA;AAIAC,qBAJA;AAKAC,oBALA;AAMAC,oBANA;AAOAC,sBAPA;AAQAC,0BARA;AASAC,sBATA;AAUAC;AAAA;AAAA,QAVA;AAWAC,oBACA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA,OAFA,CAXA;AAeAC,qBACA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA,OAFA,CAfA;AAmBAC,oBACA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA,OAFA,EAGA;AAAA;AAAA,OAHA;AAnBA;AAyBA;AAlCA,qDAmCA;AACAC,gBADA,4BACA;AACA;AACAC,UACAC,iFAFA;AAGAC,sCAHA;AAIAC,mEAJA;AAKAtB,2CALA;AAMAuB,wDANA;AAOAd,mDAPA;AAQAe,+CARA;AASAC;AATA;AAYA;AACA;AACA;AAEA;AAlBA,CAnCA,sDAuDA;AACAC,cADA,0BACA;AACA;AACA;AAEA,WACA,+BACA,8BADA,IAEA,2BAFA,IAGA,8BAHA,IAIA,6BAJA,IAKA,6BALA,IAMAC,mFANA,IAOAA,2BAPA,IAQAA,2BATA;AAcA;AAnBA,CAvDA,wEA4EA;AACA;AACA,CA9EA","names":["name","inject","methods","refresh","data","bankCode","bankAccount","bankName","bankCurrecy","branchName","bankAmount","tenderAmount","certificateAmont","notifyNumber","rules","amountRules","accountRules","branchRules","addCertificate","id","Date","code","account","accountCurrecy","amount","tendersID","inputInvaild","Number"],"sourceRoot":"src/components/TenderDetail/Dialog","sources":["DialogCreateCertificate.vue"],"sourcesContent":["<template>\n  <v-row justify=\"center\">\n    <v-dialog :value=\"true\" persistent max-width=\"600px\">\n      <v-card>\n        <v-card-title>\n          <span class=\"text-h5\">創建憑證</span>\n        </v-card-title>\n        <v-card-text>\n          <v-container>\n            <v-row>\n              <v-col cols=\"12\">\n                <v-select\n                  v-model=\"bankCode\"\n                  :items=\"$store.state.banks\"\n                  label=\"銀行代碼*\"\n                  required\n                  :rules=\"rules\"\n                ></v-select>\n              </v-col>\n              <v-col cols=\"12\">\n                <v-text-field\n                  v-model=\"bankAccount\"\n                  label=\"銀行帳號*\"\n                  required\n                  :rules=\"accountRules\"\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"12\">\n                <v-text-field\n                  v-model=\"bankName\"\n                  label=\"戶名*\"\n                  hint=\"必須與公司抬頭相同\"\n                  persistent-hint\n                  required\n                  :rules=\"rules\"\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"12\" sm=\"6\">\n                <v-select\n                  v-model=\"bankCurrecy\"\n                  :items=\"$store.state.accountCurrecy\"\n                  label=\"帳戶別*\"\n                  required\n                  :rules=\"rules\"\n                ></v-select>\n              </v-col>\n              <v-col cols=\"12\">\n                <v-text-field\n                  v-model=\"branchName\"\n                  label=\"分行別*\"\n                  hint=\"請用4碼分行代碼\"\n                  persistent-hint\n                  required\n                  type=\"number\"\n                  :rules=\"branchRules\"\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"12\">\n                <v-text-field\n                  v-model=\"bankAmount\"\n                  label=\"設定金額*\"\n                  required\n                  type=\"number\"\n                  min=\"1\"\n                  :rules=\"amountRules\"\n                ></v-text-field>\n              </v-col>\n            </v-row>\n          </v-container>\n          <small>*indicates required field</small>\n        </v-card-text>\n        \n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"blue darken-1\" text @click=\"$emit('close')\">\n            Close\n          </v-btn>\n          <v-btn\n            color=\"blue darken-1\"\n            text\n            @click=\"addCertificate\"\n            :disabled=\"inputInvaild\"\n          >\n            Save\n          </v-btn>\n        </v-card-actions>\n        \n      </v-card>\n    </v-dialog>\n  </v-row>\n</template>\n\n<script>\nexport default {\n  name: 'refresh',\n    inject: ['reload'],\n    methods: {\n          refresh () {\n              this.reload()\n          }\n    },\n  data() {\n    return {\n      bankCode: \"\",\n      bankAccount: \"\",\n      bankName: \"\",\n      bankCurrecy: \"\",\n      branchName: \"\",\n      bankAmount: \"\",\n      tenderAmount: \"\",\n      certificateAmont: \"\",\n      notifyNumber: \"\",\n      rules: [(value) => !!value || \"Required.\"],\n      amountRules: [\n        (value) => !!value || \"Required.\",\n        (value) => value <= Number(this.tenderAmount) - Number(this.certificateAmont) || \"不能高於\" + this.notifyNumber,\n      ],\n      accountRules: [\n        (value) => !!value || \"Required.\",\n        (value) => (value || \"\").length <= 14 || \"Max 14 characters\",\n      ],\n      branchRules:[\n        (value) => !!value || \"Required.\",\n        (value) => (value || \"\").length == 4 || \"Must 4 characters\",\n        (value) => value < 1 || \"沒有此分行號\" ,\n      ]\n    };\n  },\n  methods: {\n    addCertificate() {\n      let newCertificate = {\n        id:\n          Date.now() + this.$route.query.id + this.bankCode.substr(0,3) +this.bankAccount,\n        code: this.bankCode.substr(0,3),\n        account: this.bankAccount.replace(/ /g,'').padStart(14, '0'),\n        name: this.bankName.replace(/ /g,''),\n        accountCurrecy: this.bankCurrecy.replace(/ /g,''),\n        branchName: this.branchName.replace(/ /g,''),\n        amount: this.bankAmount.replace(/ /g,''),\n        tendersID: this.$route.query.id,\n      };\n\n      this.$store.commit(\"addCertificate\", newCertificate);\n      this.$emit(\"close\");\n      this.reload();\n      \n    },\n  },\n  computed: {\n    inputInvaild() {\n      this.tenderAmount = this.$route.query.amount\n      this.certificateAmont = this.$store.state.currentCertificateAmount\n      \n      return (\n        this.bankCode.trim() === \"\" ||\n        this.bankAccount.trim() === \"\" ||\n        this.bankName.trim() === \"\" ||\n        this.bankCurrecy.trim() === \"\" ||\n        this.branchName.trim() === \"\" ||\n        this.bankAmount.trim() === \"\" ||\n        Number(this.bankAmount) > Number(this.tenderAmount)  - Number(this.certificateAmont) ||\n        Number(this.bankAmount) < 1 ||\n        Number(this.branchName) < 1\n        \n      );\n    \n\n    },\n  },\n  mounted(){\n    this.notifyNumber =  Number(this.tenderAmount) - Number(this.certificateAmont).toString()\n  }\n};\n</script>\n\n<style>\n</style>"]},"metadata":{},"sourceType":"module"}