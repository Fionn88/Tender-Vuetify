{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  methods: {\n    addCertificate: function addCertificate() {\n      // for (let index = 0; index < this.$store.state.certificate.length; ++index) {\n      //   const element = theArray[index];\n      //   axios\n      //   .post(\"http://127.0.0.1:3000/createCertificate\", {\n      //     tenderid: element.tendersID,\n      //     accountCode: element.code,\n      //     account: element.account,\n      //     name: element.name,\n      //     currency: element.accountCurrecy,\n      //     branch: element.branchName,\n      //     amount: element.amount,\n      //   })\n      //   .then(function (response) {\n      //     console.log(response);\n      //   })\n      //   .catch(function (error) {\n      //     console.log(error);\n      //   });\n      // }\n      axios.post(\"http://127.0.0.1:3000/createCertificate\", {\n        tenderid: this.$store.state.certificate[0].tendersOd,\n        accountCode: this.$store.state.certificate.code,\n        account: this.$store.state.certificate.account,\n        name: this.$store.state.certificate.name,\n        currency: this.$store.state.certificate.accountCurrecy,\n        branch: this.$store.state.certificate.branchName,\n        amount: this.$store.state.certificate.amount\n      }).then(function (response) {\n        console.log(response);\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACAA;AACAC,kBADA,4BACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,YACAC,IADA,CACA,yCADA,EACA;AACAC,4DADA;AAEAC,uDAFA;AAGAC,sDAHA;AAIAC,gDAJA;AAKAC,8DALA;AAMAC,wDANA;AAOAC;AAPA,OADA,EAUAC,IAVA,CAUA;AACAC;AACA,OAZA,WAaA;AACAA;AACA,OAfA;AAiBA;AAtCA;AADA","names":["methods","addCertificate","axios","post","tenderid","accountCode","account","name","currency","branch","amount","then","console"],"sourceRoot":"src/components/TenderDetail/Dialog","sources":["DialogSureApply.vue"],"sourcesContent":["<template>\n  <v-dialog :value=\"true\" persistent max-width=\"290\">\n    <v-card>\n      <v-card-title class=\"text-h5\"> 確定 </v-card-title>\n      <v-card-text\n        >確定繳交押標金 {{ this.$route.query.amount }} 元嗎？\n        {{ this.$route.query.amount }} 將會在您的帳戶凍結</v-card-text\n      >\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"green darken-1\" text @click=\"$emit('close')\"> No </v-btn>\n\n        <!-- ------------------------------------------------------------- -->\n        <!-- call API To Bank -->\n        <v-btn color=\"green darken-1\" text @click=\"addCertificate\"> Yes </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  methods: {\n    addCertificate() {\n      // for (let index = 0; index < this.$store.state.certificate.length; ++index) {\n      //   const element = theArray[index];\n      //   axios\n      //   .post(\"http://127.0.0.1:3000/createCertificate\", {\n      //     tenderid: element.tendersID,\n      //     accountCode: element.code,\n      //     account: element.account,\n      //     name: element.name,\n      //     currency: element.accountCurrecy,\n      //     branch: element.branchName,\n      //     amount: element.amount,\n      //   })\n      //   .then(function (response) {\n      //     console.log(response);\n      //   })\n      //   .catch(function (error) {\n      //     console.log(error);\n      //   });\n      // }\n      axios\n        .post(\"http://127.0.0.1:3000/createCertificate\", {\n          tenderid: this.$store.state.certificate[0].tendersOd,\n          accountCode: this.$store.state.certificate.code,\n          account: this.$store.state.certificate.account,\n          name: this.$store.state.certificate.name,\n          currency: this.$store.state.certificate.accountCurrecy,\n          branch: this.$store.state.certificate.branchName,\n          amount: this.$store.state.certificate.amount,\n        })\n        .then(function (response) {\n          console.log(response);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n      \n    },\n  },\n};\n</script>\n\n<style>\n</style>"]},"metadata":{},"sourceType":"module"}