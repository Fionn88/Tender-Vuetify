{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  data: function data() {\n    return {\n      certificates: this.$store.state.certificates\n    };\n  },\n  methods: {\n    insertCertificate: function insertCertificate() {\n      var _this = this;\n\n      Object.keys(this.certificates).filter(function (k, i) {\n        return i >= 100 && i < 300;\n      }).forEach(function (k) {\n        return console.log(_this.certificates[k]);\n      });\n      console.log(\"addCertificate\");\n      console.log(\"certificates: \" + this.certificates);\n      console.log(this.certificates);\n      console.log(\"store: \" + this.$store.state.certificates);\n      console.log(this.$store.state.certificates);\n\n      var _loop = function _loop(index) {\n        var element = _this.certificates[index];\n        console.log(\"element: \" + element);\n        console.log(element);\n        console.log(element.tendersID); // wait(5000)\n\n        setTimeout(function () {\n          axios.post(\"http://127.0.0.1:3000/createCertificate\", {\n            tenderid: element.tendersID,\n            accountCode: element.code,\n            account: element.account,\n            name: element.name,\n            currency: element.accountCurrecy,\n            branch: element.branchName,\n            amount: element.amount\n          }).then(function (response) {\n            console.log(\"resp: \" + response);\n            console.log(response.data.status); // this.tenders = resp.data.tender\n          })[\"catch\"](function (err) {\n            console.log(\"err\");\n            console.log(err);\n          });\n        }, 2000);\n      };\n\n      for (var index = 0; index < Object.keys(this.certificates).length; ++index) {\n        _loop(index);\n      } // axios\n      //   .post(\"http://127.0.0.1:3000/createCertificate\", {\n      //     tenderid: \"NCHC-P-106104\",\n      //     accountCode: \"000\",\n      //     account: \"00000000000000\",\n      //     name: \"王小明\",\n      //     currency: \"台幣\",\n      //     branch: \"1234\",\n      //     amount: 49000000,\n      //   })\n      //   .then(function (response) {\n      //     console.log(response);\n      //     this.$emit(\"close\");\n      //   })\n      //   .catch(function (error) {\n      //     console.log(error);\n      //   });\n\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACAA,MADA,kBACA;AACA;AACAC;AADA;AAGA,GALA;AAMAC;AACAC,qBADA,+BACA;AAAA;;AACAC,qCACAC,MADA,CACA;AAAA;AAAA,OADA,EAEAC,OAFA,CAEA;AAAA;AAAA,OAFA;AAIAC;AACAA;AACAA;AACAA;AACAA;;AATA,iCAYAC,KAZA;AAgBA;AACAD;AACAA;AACAA,uCAnBA,CAoBA;;AACAE;AACAC,gBACAC,IADA,CACA,yCADA,EACA;AACAC,uCADA;AAEAC,qCAFA;AAGAC,oCAHA;AAIAC,8BAJA;AAKAC,4CALA;AAMAC,sCANA;AAOAC;AAPA,WADA,EAUAC,IAVA,CAUA;AACAZ;AACAA,8CAFA,CAGA;AACA,WAdA,WAeA;AACAA;AACAA;AACA,WAlBA;AAmBA,SApBA,EAoBA,IApBA;AArBA;;AAWA,WACA,aADA,EAEAC,6CAFA,EAGA,OAHA,EAIA;AAAA,cAHAA,KAGA;AA2BA,OA1CA,CA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AA9DA;AANA","names":["data","certificates","methods","insertCertificate","Object","filter","forEach","console","index","setTimeout","axios","post","tenderid","accountCode","account","name","currency","branch","amount","then"],"sourceRoot":"src/components/TenderDetail/Dialog","sources":["DialogSureApply.vue"],"sourcesContent":["<template>\n  <v-dialog :value=\"true\" persistent max-width=\"290\">\n    <v-card>\n      <v-card-title class=\"text-h5\"> 確定 </v-card-title>\n      <v-card-text\n        >確定繳交押標金 {{ this.$route.query.amount }} 元嗎？\n        {{ this.$route.query.amount }} 將會在您的帳戶凍結</v-card-text\n      >\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"green darken-1\" text @click=\"$emit('close')\"> No </v-btn>\n\n        <!-- ------------------------------------------------------------- -->\n        <!-- call API To Bank -->\n        <v-btn color=\"green darken-1\" text @click=\"insertCertificate\">\n          Yes\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      certificates: this.$store.state.certificates,\n    };\n  },\n  methods: {\n    insertCertificate() {\n      Object.keys(this.certificates)\n        .filter((k, i) => i >= 100 && i < 300)\n        .forEach((k) => console.log(this.certificates[k]));\n\n      console.log(\"addCertificate\");\n      console.log(\"certificates: \" + this.certificates);\n      console.log(this.certificates);\n      console.log(\"store: \" + this.$store.state.certificates);\n      console.log(this.$store.state.certificates);\n\n      for (\n        let index = 0;\n        index < Object.keys(this.certificates).length;\n        ++index\n      ) {\n        const element = this.certificates[index];\n        console.log(\"element: \" + element);\n        console.log(element);\n        console.log(element.tendersID);\n        // wait(5000)\n        setTimeout(function () {\n          axios\n            .post(\"http://127.0.0.1:3000/createCertificate\", {\n              tenderid: element.tendersID,\n              accountCode: element.code,\n              account: element.account,\n              name: element.name,\n              currency: element.accountCurrecy,\n              branch: element.branchName,\n              amount: element.amount,\n            })\n            .then(function (response) {\n              console.log(\"resp: \" + response);\n              console.log(response.data.status);\n              // this.tenders = resp.data.tender\n            })\n            .catch((err) => {\n              console.log(\"err\");\n              console.log(err);\n            });\n        }, 2000);\n      }\n\n      // axios\n      //   .post(\"http://127.0.0.1:3000/createCertificate\", {\n      //     tenderid: \"NCHC-P-106104\",\n      //     accountCode: \"000\",\n      //     account: \"00000000000000\",\n      //     name: \"王小明\",\n      //     currency: \"台幣\",\n      //     branch: \"1234\",\n      //     amount: 49000000,\n      //   })\n      //   .then(function (response) {\n      //     console.log(response);\n      //     this.$emit(\"close\");\n      //   })\n      //   .catch(function (error) {\n      //     console.log(error);\n      //   });\n    },\n  },\n};\n</script>\n\n<style>\n</style>"]},"metadata":{},"sourceType":"module"}